#!/bin/sh
[ -z "$1" ] && echo "Error: should be run by udhcpc" && exit 1

. /lib/functions.sh
. /lib/netifd/netifd-proto.sh

set_routes() {
	local max=128
	local target=
	local oldstr=
	local newstr=
	local mask=

	while [ -n "$1" -a $max -gt 0 ]; do
		target=${1%%/*}
		mask=32
		oldstr=$target
		while [ $mask -ge 0 ]; do
			newstr=${oldstr%%.0}
			if [ "X$newstr" != "X$oldstr" ]; then
				mask=$((mask-8))
				oldstr=$newstr
			else
				break
			fi
		done

		# echo "proto_add_ipv4_route $target $mask ${1##*/}" >/dev/console
		proto_add_ipv4_route "$target" $mask "${1##*/}"
		max=$(($max-1))
		shift 1
	done
}

set_classless_routes() {
	local max=128
	local type
	while [ -n "$1" -a -n "$2" -a $max -gt 0 ]; do
		proto_add_ipv4_route "${1%%/*}" "${1##*/}" "$2"
		max=$(($max-1))
		shift 2
	done
}

setup_interface () {
	local inetproto=""
	local dslite_state="disconnect"

	proto_init_update "$IFNAME" 1
	network_echo $LOG_PRI_NOTICE "dhcp" "get ip info success."
	network_echo $LOG_PRI_DEBUG "dhcp" "now set ip info in $IFNAME."
	proto_add_ipv4_address "$ip" "${subnet:-255.255.255.0}"
	# TODO: apply $broadcast

	# save ip to config
	echo "$ip" > /var/run/udhcpc-$IFNAME.ip

	config_load network
	config_get inetproto internet proto
	config_get v6proto internetv6 proto
	if [ "$v6proto" == "dslite" ]; then
		local connected=$(ubus call network.interface.internetv6 status | grep '\"state\": \"connected\"')
		if [ -n "$connected" ]; then
			dslite_state="connected"
		fi
	fi

	if [[ "X$inetproto" != "Xpppoe" -a "$dslite_state" != "connected" ]]; then
		for i in $router; do
			proto_add_ipv4_route 0.0.0.0 0 "$i"
		done
	fi

	# option 33
	[ -n "$routes" ] && set_routes $routes

	# CIDR STATIC ROUTES (rfc3442)
	[ -n "$staticroutes" ] && set_classless_routes $staticroutes
	[ -n "$msstaticroutes" ] && set_classless_routes $msstaticroutes

	for dns in $dns; do
		proto_add_dns_server "$dns"
	done
	for domain in $domain; do
		proto_add_dns_search "$domain"
	done
	proto_send_update "$INTERFACE"

	# TODO
	# [ -n "$ntpsrv" ] && 	change_state network "$ifc" lease_ntpsrv "$ntpsrv"
	# [ -n "$timesvr" ] && 	change_state network "$ifc" lease_timesrv "$timesvr"
	# [ -n "$hostname" ] &&	change_state network "$ifc" lease_hostname "$hostname"
	# [ -n "$timezone" ] && 	change_state network "$ifc" lease_timezone "$timezone"
}

deconfig_interface() {
	proto_init_update "*" 0
	proto_send_update "$INTERFACE"
	network_echo $LOG_PRI_NOTICE "dhcp" "interface $INTERFACE down,and now delete ip info."
}

case "$1" in
	deconfig)
		deconfig_interface
		;;
	renew|bound)
		setup_interface
		;;
esac

# user rules
[ -f /etc/udhcpc.user ] && . /etc/udhcpc.user

exit 0
